---
import Layout from '../layouts/Layout.astro';
import classesData from '../data/classes.json';
import { loadDataWithVariables } from '../utils/variables.js';
import { Image } from 'astro:assets';
import ContactCTA from '../components/ContactCTA.astro';

interface FAQItem {
  question: string;
  answer: string;
}

interface CTAData {
  title: string;
  description: string;
  button: {
    text: string;
    url: string;
  };
}

interface FeatureItem {
  title: string;
  description: string;
  icon: string;
}

interface ProcessedData {
  header: {
    badge: string;
    title: string;
    description: string;
    image: string;
  };
  intro: {
    title: string;
    description: string;
  };
  keyFeatures: {
    title: string;
    description: string;
    items: FeatureItem[];
  };
  featuresList: {
    title: string;
    description: string;
    items: string[];
  };
  howItWorks: {
    title: string;
    description: string;
    steps: Array<{
      number: string;
      title: string;
      description: string;
    }>;
  };
  courses: Array<{
    title: string;
    description: string;
    levels?: string[];
    components?: string[];
    details: {
      ageGroup: string;
      classSize: string;
      features: string[];
      image: string;
      level?: string;
    };
  }>;
  pricing: {
    title: string;
    description: string;
    packages: Array<{
      name: string;
      tagline: string;
      price: string;
      period: string;
      color: 'blue' | 'purple' | 'gray';
      popular?: boolean;
      features: string[];
      buttonText: string;
      buttonUrl: string;
    }>;
  };
  faq: {
    title: string;
    description: string;
    questions: FAQItem[];
  };
  cta: CTAData;
}

const processedData = loadDataWithVariables(classesData) as ProcessedData;
---

<Layout title="Cambridge Courses for Children and Teenagers">
  <!-- Hero Section -->
  <section class="py-20 bg-gradient-to-b from-blue-50 to-white relative overflow-hidden">
    <!-- Wave background -->
    <div class="absolute inset-0 z-0 overflow-hidden">
      <svg class="absolute w-full h-full" viewBox="0 0 1440 320" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none">
        <path fill="rgba(59, 130, 246, 0.05)" d="M0,96L48,112C96,128,192,160,288,160C384,160,480,128,576,122.7C672,117,768,139,864,149.3C960,160,1056,160,1152,138.7C1248,117,1344,75,1392,53.3L1440,32L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z"></path>
      </svg>
      <svg class="absolute w-full h-full" viewBox="0 0 1440 320" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none">
        <path fill="rgba(79, 70, 229, 0.05)" d="M0,192L48,181.3C96,171,192,149,288,154.7C384,160,480,192,576,202.7C672,213,768,203,864,170.7C960,139,1056,85,1152,74.7C1248,64,1344,96,1392,112L1440,128L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z"></path>
      </svg>
    </div>
    
    <div class="container mx-auto px-4 relative z-10">
      <div class="flex flex-col md:flex-row items-center justify-between gap-12">
        <!-- Text Content -->
        <div class="md:w-1/2">
          <div class="inline-block bg-blue-100 rounded-full px-4 py-2 text-blue-700 font-semibold text-sm mb-6 animate-bounce">
            {processedData.header.badge}
          </div>

          <h1 class="text-4xl md:text-5xl font-bold font-heading mb-6 text-gray-900 leading-tight">
            {processedData.header.title}
          </h1>

          <p class="text-lg mb-8 text-gray-700 max-w-xl">
            {processedData.header.description}
          </p>
        </div>

        <!-- Hero Image -->
        <div class="md:w-1/2">
          <div class="bg-white rounded-2xl shadow-lg overflow-hidden">
            <Image
              src={processedData.header.image || "/images/hero-classes.jpg"}
              alt="Cambridge English Students"
              class="h-full w-full object-cover"
              width="1600"
              height="900"
            />
          </div>
        </div>
      </div>
    </div>
  </section>
  
  <!-- Intro Section -->
  <section class="py-16 bg-gradient-to-b from-blue-50 to-white">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-3xl font-bold mb-6 text-center font-heading text-primary-800 animate-fade-in">{processedData.intro.title}</h2>
        <p class="text-xl text-gray-600">{processedData.intro.description}</p>
      </div>
    </div>
  </section>
  
  <!-- Key Features Section - Combined with Features List -->
  <section class="py-16 bg-gradient-to-b from-indigo-900 via-blue-800 to-indigo-900 relative overflow-hidden text-white">
    <!-- Decorative elements -->
    <div class="absolute top-0 right-0 -translate-y-1/4 translate-x-1/4">
      <div class="w-64 h-64 bg-purple-500 rounded-full blur-3xl opacity-30"></div>
    </div>
    <div class="absolute bottom-0 left-0 translate-y-1/4 -translate-x-1/4">
      <div class="w-64 h-64 bg-blue-500 rounded-full blur-3xl opacity-30"></div>
    </div>
    
    <!-- Wavy decoration with dots -->
    <div class="absolute inset-0 z-0 opacity-15">
      <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">
        <pattern id="pattern-circles" x="0" y="0" width="30" height="30" patternUnits="userSpaceOnUse" patternContentUnits="userSpaceOnUse">
          <circle id="pattern-circle" cx="10" cy="10" r="1.5" fill="#fff"></circle>
        </pattern>
        <rect id="rect" x="0" y="0" width="100%" height="100%" fill="url(#pattern-circles)"></rect>
      </svg>
    </div>
    
    <div class="container mx-auto px-4 relative z-10">
      <div class="max-w-3xl mx-auto">
        <div class="text-center mb-16">
          <h2 class="text-3xl md:text-4xl font-bold mb-6 font-heading text-white">
            {processedData.keyFeatures.title}
          </h2>
          <p class="text-xl text-blue-100 mb-8">
            {processedData.keyFeatures.description}
          </p>
        </div>
        
        <!-- Key Features Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16">
          {processedData.keyFeatures.items.map((feature, idx) => {
            const colors = [
              {
                card: "from-purple-500/20 to-blue-500/20",
                icon: "from-purple-500 to-indigo-500"
              },
              {
                card: "from-blue-500/20 to-cyan-500/20",
                icon: "from-blue-500 to-cyan-500"
              },
              {
                card: "from-emerald-500/20 to-teal-500/20",
                icon: "from-emerald-500 to-teal-500"
              }
            ];
            const color = colors[idx % colors.length];
            return (
              <div class={`bg-gradient-to-br ${color.card} backdrop-blur-sm border border-white/10 p-6 rounded-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2`}>
                <div class={`w-16 h-16 bg-gradient-to-r ${color.icon} rounded-xl flex items-center justify-center mb-6 shadow-lg`}>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    {feature.icon === 'academic-cap' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5z M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z M12 14l-6-3m6 3V7m0 7v7" />
                    )}
                    {feature.icon === 'clipboard-check' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4" />
                    )}
                    {feature.icon === 'badge-check' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z" />
                    )}
                  </svg>
                </div>
                <h3 class="text-xl font-bold mb-4 text-white">{feature.title}</h3>
                <p class="text-blue-100">{feature.description}</p>
                
                <!-- Decorative elements -->
                <div class="w-12 h-12 absolute -bottom-6 -right-6 bg-gradient-to-r from-white/5 to-white/10 rounded-full blur-xl"></div>
              </div>
            );
          })}
        </div>
        
        <!-- Features List Section - now integrated -->
        <div class="mt-16 pt-8 border-t border-white/10">
          <div class="text-center mb-10">
            <h2 class="text-3xl md:text-4xl font-bold mb-6 font-heading text-white">
              {processedData.featuresList.title}
            </h2>
            <p class="text-xl text-blue-100">
              {processedData.featuresList.description}
            </p>
          </div>
          <div class="bg-white/10 backdrop-blur-sm p-8 rounded-xl border border-white/20">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              {processedData.featuresList.items.map((item) => (
                <div class="flex items-start group">
                  <div class="flex-shrink-0 w-10 h-10 rounded-full bg-gradient-to-r from-blue-500 to-indigo-500 flex items-center justify-center mr-4 transform transition-all duration-300 group-hover:scale-110">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                  </div>
                  <p class="text-lg text-white pt-1 transform transition-all duration-300 group-hover:translate-x-1">{item}</p>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  
  <!-- Features List Section -->
  <section class="py-16 bg-white relative overflow-hidden">
    <div class="absolute top-0 right-0 w-96 h-96 bg-blue-50 rounded-full opacity-50 transform translate-x-1/3 -translate-y-1/2"></div>
    <div class="absolute bottom-0 left-0 w-80 h-80 bg-purple-50 rounded-full opacity-40 transform -translate-x-1/3 translate-y-1/3"></div>
    
    <div class="container mx-auto px-6 relative z-10">
      <div class="text-center max-w-3xl mx-auto mb-12">
        <span class="inline-block py-1 px-3 bg-indigo-50 text-indigo-700 rounded-full text-sm font-semibold mb-4">Caracteristici Programa</span>
        <h2 class="text-3xl md:text-4xl font-bold mb-6 font-heading bg-gradient-to-r from-primary-700 to-indigo-600 bg-clip-text text-transparent">{processedData.featuresList.title}</h2>
        <p class="text-xl text-gray-600 mb-8">{processedData.featuresList.description}</p>
      </div>
      
      <div class="max-w-4xl mx-auto">
        <div class="bg-white rounded-2xl shadow-xl p-8 border border-gray-100 relative">
          <!-- Decorative corners -->
          <div class="absolute -top-3 -left-3 w-6 h-6 bg-blue-500 rounded-full"></div>
          <div class="absolute -top-3 -right-3 w-6 h-6 bg-indigo-500 rounded-full"></div>
          <div class="absolute -bottom-3 -left-3 w-6 h-6 bg-indigo-500 rounded-full"></div>
          <div class="absolute -bottom-3 -right-3 w-6 h-6 bg-blue-500 rounded-full"></div>
          
          <ul class="grid md:grid-cols-2 gap-6">
            {processedData.featuresList.items.map(item => (
              <li class="flex items-start">
                <div class="flex-shrink-0 w-10 h-10 rounded-full bg-gradient-to-r from-blue-500 to-indigo-500 flex items-center justify-center mr-4">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                  </svg>
                </div>
                <p class="text-lg text-gray-700 pt-1">{item}</p>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  </section>
  
  <!-- How It Works Section -->
  <section class="py-16 bg-gradient-to-b from-gray-50 to-white relative overflow-hidden">
    <!-- Decorative dots pattern -->
    <div class="absolute inset-0 overflow-hidden opacity-20">
      <div class="absolute inset-y-0 w-full">
        {Array.from({ length: 20 }).map((_, i) => (
          <div class="absolute" style={`left: ${i * 5}%; top: ${(i % 10) * 10}%`}>
            <div class="w-2 h-2 bg-blue-500 rounded-full"></div>
          </div>
        ))}
      </div>
    </div>
    
    <div class="container mx-auto px-6 relative z-10">
      <div class="text-center max-w-3xl mx-auto mb-12">
        <span class="inline-block py-1 px-3 bg-blue-50 text-blue-700 rounded-full text-sm font-semibold mb-4">Procesul Nostru</span>
        <h2 class="text-3xl md:text-4xl font-bold mb-6 font-heading bg-gradient-to-r from-blue-700 to-indigo-600 bg-clip-text text-transparent">{processedData.howItWorks.title}</h2>
        <p class="text-xl text-gray-600 mb-10">{processedData.howItWorks.description}</p>
      </div>
      
      <div class="max-w-5xl mx-auto relative">
        <!-- Timeline line -->
        <div class="absolute left-1/2 transform -translate-x-1/2 top-0 bottom-0 w-1 bg-gradient-to-b from-blue-400 to-indigo-500 hidden md:block"></div>
        
        {processedData.howItWorks.steps.map((step, index) => (
          <div class={`flex flex-col md:flex-row items-center mb-16 relative ${index % 2 === 1 ? 'md:flex-row-reverse' : ''}`}>
            <!-- Number badge - centered on mobile, on sides for desktop -->
            <div class="w-16 h-16 rounded-full bg-gradient-to-r from-blue-500 to-indigo-600 text-white flex items-center justify-center text-2xl font-bold mb-6 md:mb-0 md:absolute md:left-1/2 md:transform md:-translate-x-1/2 z-10 shadow-lg border-4 border-white">
              {step.number}
            </div>
            
            <!-- Content -->
            <div class={`md:w-5/12 ${index % 2 === 1 ? 'md:pl-8' : 'md:pr-8'}`}>
              <div class={`bg-white rounded-xl shadow-lg p-6 transform transition-all duration-300 hover:shadow-xl hover:-translate-y-1 border border-gray-100`}>
                <h3 class="text-xl font-bold mb-3 text-gray-800">{step.title}</h3>
                <p class="text-gray-600">{step.description}</p>
                
                <!-- Decorative graphic -->
                <div class={`w-full h-1 mt-4 bg-gradient-to-r ${
                  index === 0 ? "from-blue-200 to-blue-400" : 
                  index === 1 ? "from-indigo-200 to-indigo-400" : 
                  "from-purple-200 to-purple-400"
                } rounded-full`}></div>
              </div>
            </div>
            
            <!-- Empty space for the other side -->
            <div class="md:w-5/12"></div>
          </div>
        ))}
      </div>
    </div>
  </section>
  
  <!-- Courses Section -->
  <section class="py-16 bg-white" id="courses">
    <div class="container mx-auto px-6">
      <div class="text-center max-w-3xl mx-auto mb-12">
        <span class="inline-block py-1 px-3 bg-blue-50 text-blue-700 rounded-full text-sm font-semibold mb-4">Cambridge English</span>
        <h2 class="text-3xl md:text-4xl font-bold mb-6 font-heading bg-gradient-to-r from-blue-700 to-indigo-600 bg-clip-text text-transparent">Cursurile Noastre Cambridge</h2>
        <p class="text-xl text-gray-600 mb-10">Oferim programe Cambridge adaptate diferitelor grupuri de vârstă și niveluri de competență</p>
      </div>
      
      <div class="space-y-16">
        {processedData.courses.map((course, index) => {
          const colors = [
            {
              bg: "bg-gradient-to-tr from-blue-50 to-indigo-50",
              accent: "from-blue-500 to-indigo-500",
              light: "bg-blue-50",
              text: "text-blue-600",
              border: "border-blue-100",
              tag: {
                bg: "bg-blue-100",
                text: "text-blue-800"
              },
              button: {
                bg: "bg-gradient-to-r from-blue-600 to-indigo-600",
                hover: "hover:from-blue-700 hover:to-indigo-700"
              }
            },
            {
              bg: "bg-gradient-to-tr from-purple-50 to-pink-50",
              accent: "from-purple-500 to-pink-500",
              light: "bg-purple-50",
              text: "text-purple-600", 
              border: "border-purple-100",
              tag: {
                bg: "bg-purple-100",
                text: "text-purple-800"
              },
              button: {
                bg: "bg-gradient-to-r from-purple-600 to-pink-600",
                hover: "hover:from-purple-700 hover:to-pink-700"
              }
            },
            {
              bg: "bg-gradient-to-tr from-emerald-50 to-teal-50",
              accent: "from-emerald-500 to-teal-500", 
              light: "bg-emerald-50",
              text: "text-emerald-600",
              border: "border-emerald-100",
              tag: {
                bg: "bg-emerald-100",
                text: "text-emerald-800"
              },
              button: {
                bg: "bg-gradient-to-r from-emerald-600 to-teal-600",
                hover: "hover:from-emerald-700 hover:to-teal-700"
              }
            },
            {
              bg: "bg-gradient-to-tr from-amber-50 to-orange-50",
              accent: "from-amber-500 to-orange-500", 
              light: "bg-amber-50",
              text: "text-amber-600",
              border: "border-amber-100",
              tag: {
                bg: "bg-amber-100",
                text: "text-amber-800"
              },
              button: {
                bg: "bg-gradient-to-r from-amber-600 to-orange-600",
                hover: "hover:from-amber-700 hover:to-orange-700"
              }
            }
          ];
          const color = colors[index % colors.length];
          
          return (
            <div class={`rounded-3xl overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-1 ${color.bg} ${color.border} border`}>
              <div class="grid md:grid-cols-2 gap-0">
                <!-- Left section with image or info depending on index -->
                {index % 2 === 0 ? (
                  <>
                    <div class="p-8 md:p-10 flex flex-col h-full justify-between">
                      <div>
                        <div class="flex flex-wrap gap-2 mb-6">
                          <span class={`inline-block px-3 py-1 rounded-full text-sm font-medium ${color.tag.bg} ${color.tag.text}`}>
                            {course.details.ageGroup}
                          </span>
                          <span class={`inline-block px-3 py-1 rounded-full text-sm font-medium bg-indigo-100 text-indigo-800`}>
                            {course.levels && course.levels.length > 0 ? course.levels[0] : course.components && course.components.length > 0 ? course.components[0] : ''}
                          </span>
                          <span class={`inline-block px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800`}>
                            {course.details.classSize}
                          </span>
                        </div>
                        
                        <h3 class="text-2xl font-bold text-gray-800 mb-4">{course.title}</h3>
                        
                        <!-- Pricing information -->
                        {processedData.pricing.packages[index % processedData.pricing.packages.length] && (
                          <div class={`mb-6 py-3 px-4 bg-gradient-to-r ${color.accent} rounded-lg text-white shadow-md transform hover:scale-105 transition-transform duration-300`}>
                            <div class="flex flex-wrap justify-between items-baseline">
                              <div>
                                <span class="text-2xl font-bold">{processedData.pricing.packages[index % processedData.pricing.packages.length].price}</span>
                                <span class="text-sm opacity-90 ml-1">/{processedData.pricing.packages[index % processedData.pricing.packages.length].period}</span>
                              </div>
                              {processedData.pricing.packages[index % processedData.pricing.packages.length].popular && (
                                <span class="bg-white text-xs font-bold px-2 py-1 rounded-full text-indigo-600 shadow-sm">
                                  RECOMANDAT
                                </span>
                              )}
                            </div>
                            <p class="text-sm mt-1 text-white/90">{processedData.pricing.packages[index % processedData.pricing.packages.length].tagline}</p>
                          </div>
                        )}
                        
                        <p class="text-gray-600 mb-6">{course.description}</p>
                        
                        <!-- Features list -->
                        <div class={`p-5 rounded-xl ${color.light} mb-6`}>
                          <h4 class="font-semibold text-gray-800 mb-3">Caracteristici:</h4>
                          <ul class="space-y-2">
                            {course.details.features.map(feature => (
                              <li class="flex items-start">
                                <div class={`flex-shrink-0 w-6 h-6 rounded-full bg-gradient-to-r ${color.accent} flex items-center justify-center mr-3 mt-0.5`}>
                                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-white" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                  </svg>
                                </div>
                                <span class="text-gray-700">{feature}</span>
                              </li>
                            ))}
                          </ul>
                        </div>
                      </div>
                      
                      <!-- Bottom section with levels and button -->
                      <div>
                        <!-- Exam levels -->
                        <div class="mb-6">
                          <h4 class="font-semibold text-gray-800 mb-2">Niveluri de Examinare:</h4>
                          <div class="flex flex-wrap gap-2">
                            {(course.levels || []).map(level => (
                              <span class={`inline-block px-3 py-1 rounded-full text-sm text-white bg-gradient-to-r ${color.accent}`}>
                                {level}
                              </span>
                            ))}
                            {(course.components || []).map(component => (
                              <span class={`inline-block px-3 py-1 rounded-full text-sm text-white bg-gradient-to-r ${color.accent}`}>
                                {component}
                              </span>
                            ))}
                          </div>
                        </div>
                        
                        <a href="/contact" class={`inline-flex items-center px-6 py-3 ${color.button.bg} ${color.button.hover} text-white rounded-lg shadow-md hover:shadow-xl transition-all duration-300`}>
                          {processedData.pricing.packages[index % processedData.pricing.packages.length]?.buttonText || "Află Mai Multe"}
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                          </svg>
                        </a>
                      </div>
                    </div>
                    
                    <div class="relative h-80 md:h-auto overflow-hidden group">
                      <img 
                        src={course.details.image || "/images/course-placeholder.jpg"}
                        alt={course.title}
                        class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                      />
                      
                      <!-- Overlay -->
                      <div class="absolute inset-0 bg-gradient-to-t from-gray-900/80 via-gray-900/40 to-transparent flex flex-col justify-end p-8">
                        <div class="transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300">
                          <span class={`inline-block px-3 py-1 rounded-full text-sm font-medium mb-2 ${color.tag.bg} ${color.tag.text}`}>
                            {course.details.ageGroup}
                          </span>
                          <h3 class="text-3xl font-bold text-white">{course.title}</h3>
                        </div>
                      </div>
                      
                      <!-- Decorative elements -->
                      <div class={`absolute -top-6 -right-6 w-24 h-24 rounded-full bg-gradient-to-r ${color.accent} opacity-30 blur-2xl`}></div>
                    </div>
                  </>
                ) : (
                  <>
                    <div class="relative h-80 md:h-auto overflow-hidden group">
                      <img 
                        src={course.details.image || "/images/course-placeholder.jpg"}
                        alt={course.title}
                        class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                      />
                      
                      <!-- Overlay -->
                      <div class="absolute inset-0 bg-gradient-to-t from-gray-900/80 via-gray-900/40 to-transparent flex flex-col justify-end p-8">
                        <div class="transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300">
                          <span class={`inline-block px-3 py-1 rounded-full text-sm font-medium mb-2 ${color.tag.bg} ${color.tag.text}`}>
                            {course.details.ageGroup}
                          </span>
                          <h3 class="text-3xl font-bold text-white">{course.title}</h3>
                        </div>
                      </div>
                      
                      <!-- Decorative elements -->
                      <div class={`absolute -top-6 -left-6 w-24 h-24 rounded-full bg-gradient-to-r ${color.accent} opacity-30 blur-2xl`}></div>
                    </div>
                    
                    <div class="p-8 md:p-10 flex flex-col h-full justify-between">
                      <div>
                        <div class="flex flex-wrap gap-2 mb-6">
                          <span class={`inline-block px-3 py-1 rounded-full text-sm font-medium ${color.tag.bg} ${color.tag.text}`}>
                            {course.details.ageGroup}
                          </span>
                          <span class={`inline-block px-3 py-1 rounded-full text-sm font-medium bg-indigo-100 text-indigo-800`}>
                            {course.levels && course.levels.length > 0 ? course.levels[0] : course.components && course.components.length > 0 ? course.components[0] : ''}
                          </span>
                          <span class={`inline-block px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800`}>
                            {course.details.classSize}
                          </span>
                        </div>
                        
                        <h3 class="text-2xl font-bold text-gray-800 mb-4">{course.title}</h3>
                        
                        <!-- Pricing information -->
                        {processedData.pricing.packages[index % processedData.pricing.packages.length] && (
                          <div class={`mb-6 py-3 px-4 bg-gradient-to-r ${color.accent} rounded-lg text-white shadow-md transform hover:scale-105 transition-transform duration-300`}>
                            <div class="flex flex-wrap justify-between items-baseline">
                              <div>
                                <span class="text-2xl font-bold">{processedData.pricing.packages[index % processedData.pricing.packages.length].price}</span>
                                <span class="text-sm opacity-90 ml-1">/{processedData.pricing.packages[index % processedData.pricing.packages.length].period}</span>
                              </div>
                              {processedData.pricing.packages[index % processedData.pricing.packages.length].popular && (
                                <span class="bg-white text-xs font-bold px-2 py-1 rounded-full text-indigo-600 shadow-sm">
                                  RECOMANDAT
                                </span>
                              )}
                            </div>
                            <p class="text-sm mt-1 text-white/90">{processedData.pricing.packages[index % processedData.pricing.packages.length].tagline}</p>
                          </div>
                        )}
                        
                        <p class="text-gray-600 mb-6">{course.description}</p>
                        
                        <!-- Features list -->
                        <div class={`p-5 rounded-xl ${color.light} mb-6`}>
                          <h4 class="font-semibold text-gray-800 mb-3">Caracteristici:</h4>
                          <ul class="space-y-2">
                            {course.details.features.map(feature => (
                              <li class="flex items-start">
                                <div class={`flex-shrink-0 w-6 h-6 rounded-full bg-gradient-to-r ${color.accent} flex items-center justify-center mr-3 mt-0.5`}>
                                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-white" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                  </svg>
                                </div>
                                <span class="text-gray-700">{feature}</span>
                              </li>
                            ))}
                          </ul>
                        </div>
                      </div>
                      
                      <!-- Bottom section with levels and button -->
                      <div>
                        <!-- Exam levels -->
                        <div class="mb-6">
                          <h4 class="font-semibold text-gray-800 mb-2">Niveluri de Examinare:</h4>
                          <div class="flex flex-wrap gap-2">
                            {(course.levels || []).map(level => (
                              <span class={`inline-block px-3 py-1 rounded-full text-sm text-white bg-gradient-to-r ${color.accent}`}>
                                {level}
                              </span>
                            ))}
                            {(course.components || []).map(component => (
                              <span class={`inline-block px-3 py-1 rounded-full text-sm text-white bg-gradient-to-r ${color.accent}`}>
                                {component}
                              </span>
                            ))}
                          </div>
                        </div>
                        
                        <a href="/contact" class={`inline-flex items-center px-6 py-3 ${color.button.bg} ${color.button.hover} text-white rounded-lg shadow-md hover:shadow-xl transition-all duration-300`}>
                          {processedData.pricing.packages[index % processedData.pricing.packages.length]?.buttonText || "Află Mai Multe"}
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                          </svg>
                        </a>
                      </div>
                    </div>
                  </>
                )}
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>
  
  <!-- FAQ Section -->
  <section class="py-16 bg-white relative overflow-hidden" id="faq">
    <!-- Decorative background elements -->
    <div class="absolute inset-0 opacity-5">
      <div class="absolute top-0 right-0 w-1/2 h-1/2 bg-indigo-200 rounded-full blur-3xl transform translate-x-1/3 -translate-y-1/3"></div>
      <div class="absolute bottom-0 left-0 w-1/2 h-1/2 bg-blue-200 rounded-full blur-3xl transform -translate-x-1/3 translate-y-1/3"></div>
    </div>
    
    <div class="container mx-auto px-6 relative z-10">
      <div class="text-center max-w-3xl mx-auto mb-12">
        <span class="inline-block py-1 px-3 bg-indigo-50 text-indigo-700 rounded-full text-sm font-semibold mb-4">Întrebări și Răspunsuri</span>
        <h2 class="text-3xl md:text-4xl font-bold mb-6 font-heading bg-gradient-to-r from-indigo-700 to-blue-600 bg-clip-text text-transparent">{processedData.faq.title}</h2>
        <p class="text-xl text-gray-600 mb-10">{processedData.faq.description}</p>
      </div>
      
      <div class="max-w-4xl mx-auto">
        <div class="grid gap-6">
          {processedData.faq.questions.map((faq, index) => (
            <div class="bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-100">
              <details class="group">
                <summary class="flex items-center justify-between cursor-pointer p-6">
                  <h3 class="text-xl font-semibold text-gray-800 group-open:text-indigo-600 transition-colors duration-300">{faq.question}</h3>
                  <span class="relative ml-4 flex-shrink-0 h-7 w-7">
                    <svg xmlns="http://www.w3.org/2000/svg" class="absolute h-7 w-7 text-indigo-500 group-open:opacity-0 transition-opacity duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                    </svg>
                    <svg xmlns="http://www.w3.org/2000/svg" class="absolute h-7 w-7 text-indigo-500 opacity-0 group-open:opacity-100 transition-opacity duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 12H6" />
                    </svg>
                  </span>
                </summary>
                
                <div class="px-6 pb-6 pt-2">
                  <div class="h-0.5 w-full bg-gradient-to-r from-indigo-100 to-blue-100 mb-4"></div>
                  <p class="text-gray-600">{faq.answer}</p>
                </div>
              </details>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
  
  <!-- Include ContactCTA Component -->
  <ContactCTA data={processedData.cta} />
</Layout>

<style>
  /* Animation utilities */
  .animate-fade-in {
    animation: fadeIn 1s ease-out;
  }
  
  .animate-slide-up {
    animation: slideUp 0.8s ease-out forwards;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideUp {
    from { 
      opacity: 0;
      transform: translateY(20px);
    }
    to { 
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* For the FAQ accordion */
  details > summary {
    list-style: none;
  }
  
  details > summary::-webkit-details-marker {
    display: none;
  }
</style>
</div>
