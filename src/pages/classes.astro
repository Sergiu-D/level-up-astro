---
import Layout from '../layouts/Layout.astro';
import classesData from '../data/classes.json';
import { loadDataWithVariables } from '../utils/variables.js';
import Header from '../components/Header.astro';
import CourseDetail from '../components/CourseDetail.astro';
import CTA from '../components/CTA.astro';

const processedData = loadDataWithVariables(classesData);
---

<Layout title="Cambridge Courses for Children and Teenagers">
  <!-- Header Section - Introduction -->
  <div class="bg-gradient-to-b from-indigo-900 via-blue-800 to-indigo-900 text-white py-16 relative overflow-hidden">
    <!-- Decorative elements -->
    <div class="absolute top-0 right-0 -translate-y-1/4 translate-x-1/4">
      <div class="w-64 h-64 bg-purple-500 rounded-full blur-3xl opacity-30"></div>
    </div>
    <div class="absolute bottom-0 left-0 translate-y-1/4 -translate-x-1/4">
      <div class="w-64 h-64 bg-blue-500 rounded-full blur-3xl opacity-30"></div>
    </div>
    
    <div class="container mx-auto px-6 relative z-10">
      <span class="inline-block py-1 px-3 bg-indigo-800/50 text-white rounded-full text-sm font-medium mb-4 backdrop-blur-sm">
        {processedData.header.badge}
      </span>
      <h1 class="text-4xl md:text-5xl font-bold mb-6 font-heading animate-fade-in">{processedData.header.title}</h1>
      <p class="text-xl mb-8 text-white/90 max-w-4xl animate-slide-up">{processedData.header.description}</p>
    </div>
  </div>
  
  <!-- Intro Section -->
  <section class="py-16 bg-gradient-to-b from-blue-50 to-white">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-3xl font-bold mb-6 text-center font-heading text-primary-800 animate-fade-in">{processedData.intro.title}</h2>
        <p class="text-xl text-gray-600">{processedData.intro.description}</p>
      </div>
    </div>
  </section>
  
  <!-- Key Features Section -->
  <section class="py-16 bg-white">
    <div class="container mx-auto px-6">
      <h2 class="text-3xl font-bold mb-8 text-center font-heading text-primary-800 animate-fade-in">{processedData.keyFeatures.title}</h2>
      <p class="text-xl text-center mb-12 text-gray-600 max-w-4xl mx-auto">{processedData.keyFeatures.description}</p>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-12">
        {processedData.keyFeatures.items.map(feature => (
          <div class="bg-white rounded-xl p-8 shadow-card hover:shadow-lg transition-all duration-300 border border-gray-100 transform hover:-translate-y-1">
            <div class="w-14 h-14 bg-blue-100 rounded-full flex items-center justify-center mb-6">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                {feature.icon === 'academic-cap' && (
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5z M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z M12 14l-6-3m6 3V7m0 7v7" />
                )}
                {feature.icon === 'clipboard-check' && (
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4" />
                )}
                {feature.icon === 'badge-check' && (
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z" />
                )}
              </svg>
            </div>
            <h3 class="text-xl font-semibold mb-4 font-heading text-primary-700">{feature.title}</h3>
            <p class="text-gray-600">{feature.description}</p>
          </div>
        ))}
      </div>
    </div>
  </section>
  
  <!-- Features List Section -->
  <section class="py-16 bg-gray-50">
    <div class="container mx-auto px-6">
      <h2 class="text-3xl font-bold mb-8 text-center font-heading text-primary-800 animate-fade-in">{processedData.featuresList.title}</h2>
      <p class="text-xl text-center mb-12 text-gray-600 max-w-4xl mx-auto">{processedData.featuresList.description}</p>
      
      <div class="max-w-4xl mx-auto bg-white rounded-2xl shadow-xl p-8 border border-gray-100">
        <ul class="space-y-4">
          {processedData.featuresList.items.map(item => (
            <li class="flex items-start">
              <div class="flex-shrink-0 w-6 h-6 rounded-full bg-blue-100 flex items-center justify-center mr-3 mt-1">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-blue-600" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
              </div>
              <p class="text-lg text-gray-700">{item}</p>
            </li>
          ))}
        </ul>
      </div>
    </div>
  </section>
  
  <!-- How It Works Section -->
  <section class="py-16 bg-white">
    <div class="container mx-auto px-6">
      <h2 class="text-3xl font-bold mb-8 text-center font-heading text-primary-800 animate-fade-in">{processedData.howItWorks.title}</h2>
      <p class="text-xl text-center mb-12 text-gray-600 max-w-4xl mx-auto">{processedData.howItWorks.description}</p>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-12">
        {processedData.howItWorks.steps.map(step => (
          <div class="bg-white rounded-xl p-8 shadow-card hover:shadow-lg transition-all duration-300 border border-gray-100 relative">
            <div class="absolute -top-4 -left-4 w-10 h-10 rounded-full bg-blue-600 text-white flex items-center justify-center font-bold text-lg">{step.number}</div>
            <h3 class="text-xl font-semibold mb-4 font-heading text-primary-700 mt-2">{step.title}</h3>
            <p class="text-gray-600">{step.description}</p>
          </div>
        ))}
      </div>
    </div>
  </section>
  
  <!-- Courses Section -->
  <section class="py-16 bg-gradient-to-b from-gray-50 to-white" id="courses">
    <div class="container mx-auto px-6">
      <h2 class="text-3xl font-bold mb-12 text-center font-heading text-primary-800 animate-fade-in">Cursurile Noastre Cambridge</h2>
      
      <div class="space-y-12 mb-16">
        {processedData.courses.map((course, index) => (
          <div class={`bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden ${index % 2 === 1 ? 'md:flex md:flex-row-reverse' : 'md:flex'}`}>
            <div class="md:w-1/2 p-8 md:p-12">
              <h3 class="text-2xl font-bold text-gray-800 mb-4">{course.title}</h3>
              <p class="text-gray-600 mb-6">{course.description}</p>
              
              <!-- Course details -->
              <div class="bg-gray-50 rounded-xl p-4 mb-6">
                <div class="flex flex-wrap gap-2 mb-4">
                  <span class="inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">
                    {course.details.ageGroup}
                  </span>
                  <span class="inline-block bg-indigo-100 text-indigo-800 px-3 py-1 rounded-full text-sm font-medium">
                    {course.levels ? course.levels[0] : course.components[0]}
                  </span>
                  <span class="inline-block bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm font-medium">
                    {course.details.classSize}
                  </span>
                </div>
                
                <h4 class="font-semibold text-gray-800 mb-2">Caracteristici:</h4>
                <ul class="space-y-2">
                  {course.details.features.map(feature => (
                    <li class="flex items-start">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-500 mr-2 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                      </svg>
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>
              </div>
              
              <!-- Exam levels -->
              <div>
                <h4 class="font-semibold text-gray-800 mb-2">Niveluri de Examinare:</h4>
                <div class="flex flex-wrap gap-2">
                  {(course.levels || []).map(level => (
                    <span class="inline-block px-3 py-1 bg-blue-600 text-white text-sm rounded-full">
                      {level}
                    </span>
                  ))}
                  {(course.components || []).map(component => (
                    <span class="inline-block px-3 py-1 bg-indigo-600 text-white text-sm rounded-full">
                      {component}
                    </span>
                  ))}
                </div>
              </div>
              
              <div class="mt-8">
                <a href="/contact" class="inline-flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg shadow-md transition-colors duration-300">
                  AflÄƒ Mai Multe
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                  </svg>
                </a>
              </div>
            </div>
            
            <div class="md:w-1/2 h-64 md:h-auto relative">
              <img 
                src={course.details.image || "/images/course-placeholder.jpg"}
                alt={course.title}
                class="w-full h-full object-cover"
              />
              <div class="absolute bottom-0 inset-x-0 p-6 bg-gradient-to-t from-gray-900 to-transparent">
                <div class="text-white">
                  <h3 class="font-bold text-xl">{course.title}</h3>
                  <p class="text-white/80 text-sm">{course.details.ageGroup}</p>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>
  
  <!-- Pricing Section -->
  <section class="py-16 bg-gray-50" id="prices">
    <div class="container mx-auto px-6">
      <h2 class="text-3xl font-bold mb-8 text-center font-heading text-primary-800 animate-fade-in">{processedData.pricing.title}</h2>
      <p class="text-xl text-center mb-12 text-gray-600 max-w-4xl mx-auto">{processedData.pricing.description}</p>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-12">
        {processedData.pricing.packages.map(pkg => {
          const colorClasses = {
            blue: "from-blue-400 to-blue-600",
            purple: "from-purple-500 to-indigo-600",
            gray: "from-gray-700 to-gray-900",
          };
          const buttonClasses = {
            blue: "bg-blue-600 hover:bg-blue-700",
            purple: "bg-indigo-600 hover:bg-indigo-700",
            gray: "bg-gray-800 hover:bg-gray-900",
          };
          return (
            <div class={`bg-white rounded-xl overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-300 border border-gray-100 flex flex-col h-full ${pkg.popular ? 'relative transform scale-105' : ''}`}>
              {pkg.popular && <div class="absolute top-0 right-0 bg-green-500 text-white text-xs font-bold px-3 py-1 rounded-bl-lg">POPULAR</div>}
              <div class={`bg-gradient-to-r ${colorClasses[pkg.color]} p-6 text-white`}>
                <h3 class="text-2xl font-bold mb-2 font-heading">{pkg.name}</h3>
                <p class="text-white/80">{pkg.tagline}</p>
                <div class="text-3xl font-bold mt-4">{pkg.price} <span class="text-lg font-normal">/{pkg.period}</span></div>
              </div>
              <div class="p-6 flex-grow">
                <ul class="space-y-3">
                  {pkg.features.map(feature => (
                    <li class="flex items-start">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-500 mr-2 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                      </svg>
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>
              </div>
              <div class="p-6 pt-0">
                <a href={pkg.buttonUrl} class={`block w-full py-3 px-6 text-center ${buttonClasses[pkg.color]} text-white font-medium rounded-lg transition-colors duration-300`}>
                  {pkg.buttonText}
                </a>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>
  
  <!-- FAQ Section -->
  <section class="py-16 bg-white" id="faq">
    <div class="container mx-auto px-6">
      <h2 class="text-3xl font-bold mb-8 text-center font-heading text-primary-800 animate-fade-in">{processedData.faq.title}</h2>
      <p class="text-xl text-center mb-12 text-gray-600 max-w-4xl mx-auto">{processedData.faq.description}</p>
      
      <div class="max-w-4xl mx-auto bg-white rounded-2xl shadow-xl p-8 border border-gray-100">
        <div class="space-y-6">
          {processedData.faq.questions.map((item, index) => (
            <div class={index < processedData.faq.questions.length - 1 ? "border-b border-gray-200 pb-6" : ""}>
              <h3 class="text-xl font-semibold mb-3 text-primary-700">{item.question}</h3>
              <p class="text-gray-600">{item.answer}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
  
  <!-- CTA Section -->
  <section class="py-16 bg-gradient-to-r from-blue-500 to-indigo-600 text-white">
    <div class="container mx-auto px-6 text-center">
      <h2 class="text-3xl md:text-4xl font-bold mb-4">{processedData.cta.title}</h2>
      <p class="text-xl text-blue-100 mb-8 max-w-3xl mx-auto">{processedData.cta.description}</p>
      <a href={processedData.cta.button.url} class="inline-flex items-center px-8 py-4 bg-white text-blue-600 rounded-lg hover:bg-blue-50 font-medium shadow-xl transition-colors">
        {processedData.cta.button.text}
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </a>
    </div>
  </section>
</Layout>
</div>