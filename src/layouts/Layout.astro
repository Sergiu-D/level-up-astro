---
import "../styles/global.css";
import variablesData from "../data/variables.json";
import { replaceVariables, loadDataWithVariables } from "../utils/variables.js";

interface Props {
  title: string;
}

const { title } = Astro.props;
const siteName = replaceVariables("{{common.siteName}}");
const copyright = replaceVariables("{{common.copyright}}").replace(
  "{year}",
  new Date().getFullYear().toString()
);
const processedVariables = loadDataWithVariables(variablesData);

// Add Google Fonts
const fontImportUrl =
  "https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Montserrat:wght@400;500;600;700&display=swap";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="stylesheet" href={fontImportUrl} />
    <title>{title} | {siteName}</title>
  </head>
  <body class="min-h-screen flex flex-col font-sans text-gray-800 bg-gray-50">
    <header id="main-header" class="fixed top-0 w-full z-50 transition-all duration-300">
      <div
        id="header-container"
        class="container mx-auto flex flex-col md:flex-row justify-between items-center py-6 px-8 transition-all duration-300"
      >
        <div
          class="w-full md:w-auto flex justify-between items-center"
        >
          <div class="text-2xl font-heading font-bold animate-fade-in text-primary-800 flex items-center">
            <span class="bg-blue-700 text-white p-2 rounded-lg mr-2 shadow-md">C</span>
            {siteName}
          </div>
          
          <!-- Hamburger menu button - only visible on mobile -->
          <button id="menu-toggle" class="md:hidden flex items-center p-2 rounded-lg hover:bg-gray-100 focus:outline-none">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </button>
        </div>
        
        <!-- Navigation - hidden on mobile until toggled -->
        <nav id="mobile-nav" class="hidden md:block w-full md:w-auto transition-all duration-300 overflow-hidden">
          <ul class="flex flex-col md:flex-row md:flex-wrap gap-4 font-medium mt-4 md:mt-0">
            {
              (processedVariables as any).navigation?.items?.map(
                (item: any, index: number) => (
                  <li class="w-full md:w-auto">
                    <a
                      href={item.url}
                      class={`transition duration-300 ease-in-out px-4 py-3 md:py-2 rounded-md w-full block text-center md:inline ${
                        index === (processedVariables as any).navigation?.items?.length - 1
                          ? "bg-blue-700 text-white hover:bg-blue-600 hover:text-white shadow-sm"
                          : "text-primary-800 hover:text-primary-600 hover:bg-white/90 backdrop-blur-sm"
                      }`}
                    >
                      {item.text}
                    </a>
                  </li>
                )
              )
            }
          </ul>
        </nav>
      </div>
    </header>

    <main class="flex-grow animate-fade-in pt-24">
      <slot />
    </main>

    <footer class="bg-gradient-to-r from-blue-800 via-indigo-800 to-purple-800 text-white py-16 relative overflow-hidden">
      <!-- Decorative elements -->
      <div class="absolute inset-0 overflow-hidden opacity-10">
        <div class="absolute -top-20 -right-20 w-72 h-72 bg-yellow-300 rounded-full filter blur-3xl"></div>
        <div class="absolute bottom-0 left-1/4 w-80 h-80 bg-pink-400 rounded-full filter blur-3xl"></div>
        <div class="absolute top-1/3 right-1/4 w-40 h-40 bg-green-300 rounded-full filter blur-3xl"></div>
      </div>
      
      <div class="container mx-auto px-6 relative z-10">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-12 mb-12">
          <div class="backdrop-blur-sm bg-white/5 p-6 rounded-xl border border-white/10 hover:bg-white/10 transition-all duration-300">
            <h3 class="text-xl font-bold font-heading mb-6 border-b border-white/20 pb-3 flex items-center">
              <span class="bg-blue-600 text-white p-2 rounded-lg mr-3 shadow-md">C</span>
              {siteName}
            </h3>
            <p class="text-blue-100">
              Educație de calitate în limba engleză folosind metodologia Cambridge.
            </p>
          </div>
          
          <div class="backdrop-blur-sm bg-white/5 p-6 rounded-xl border border-white/10 hover:bg-white/10 transition-all duration-300">
            <h3 class="text-xl font-bold font-heading mb-6 border-b border-white/20 pb-3 flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-blue-300" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
              </svg>
              Contact
            </h3>
            <address class="text-blue-100 not-italic">
              <p class="flex items-start mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3 text-blue-300 mt-1 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                  <path stroke-linecap="round" stroke-linejoin="round" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                {replaceVariables("{{school.address}}")}
              </p>
              <p class="flex items-center mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3 text-blue-300 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                </svg>
                <a href={`tel:${replaceVariables("{{school.phone}}")}`} class="hover:text-white transition-colors hover:underline">
                  {replaceVariables("{{school.phone}}")}
                </a>
              </p>
              <p class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3 text-blue-300 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
                <a href={`mailto:${replaceVariables("{{school.email}}")}`} class="hover:text-white transition-colors hover:underline">
                  {replaceVariables("{{school.email}}")}
                </a>
              </p>
            </address>
          </div>
          
          <div class="backdrop-blur-sm bg-white/5 p-6 rounded-xl border border-white/10 hover:bg-white/10 transition-all duration-300">
            <h3 class="text-xl font-bold font-heading mb-6 border-b border-white/20 pb-3 flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-blue-300" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              Program
            </h3>
            <div class="text-blue-100">
              <p class="flex items-center mb-3">
                <span class="w-28 font-medium text-white">Luni - Vineri:</span>
                <span>{replaceVariables("{{schedule.weekdays}}")}</span>
              </p>
              <p class="flex items-center mb-3">
                <span class="w-28 font-medium text-white">Sâmbătă:</span>
                <span>{replaceVariables("{{schedule.saturday}}")}</span>
              </p>
              <p class="flex items-center">
                <span class="w-28 font-medium text-white">Duminică:</span>
                <span>{replaceVariables("{{schedule.sunday}}")}</span>
              </p>
            </div>
          </div>
        </div>
        
        <div class="border-t border-white/20 pt-8 text-center text-blue-200 flex flex-col md:flex-row justify-between items-center">
        <p>{copyright}</p>
          <div class="mt-4 md:mt-0 flex space-x-4">
            <a href="#" class="w-10 h-10 rounded-full bg-white/10 flex items-center justify-center hover:bg-blue-600 transition-colors duration-300">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z"></path></svg>
            </a>
            <a href="#" class="w-10 h-10 rounded-full bg-white/10 flex items-center justify-center hover:bg-pink-600 transition-colors duration-300">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z"></path></svg>
            </a>
            <a href="#" class="w-10 h-10 rounded-full bg-white/10 flex items-center justify-center hover:bg-blue-400 transition-colors duration-300">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"></path></svg>
            </a>
          </div>
        </div>
      </div>
    </footer>
    
    <style>
      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateY(-10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      
      .animate-slide-in {
        animation: slideIn 0.3s ease forwards;
      }
      
      @media (max-width: 768px) {
        #mobile-nav {
          background-color: rgba(255, 255, 255, 0.95);
          backdrop-filter: blur(8px);
          border-radius: 0.5rem;
          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
          padding: 1rem;
          margin-top: 0.5rem;
        }
        
        #mobile-nav ul {
          border-top: 1px solid rgba(209, 213, 219, 0.5);
          padding-top: 0.5rem;
        }
        
        #mobile-nav li:not(:last-child) {
          border-bottom: 1px solid rgba(209, 213, 219, 0.3);
        }
        
        #mobile-nav a {
          padding: 0.75rem 1rem;
          margin-bottom: 0.25rem;
        }
      }
    </style>
    
    <script>
      // Header scroll effect
      const header = document.getElementById('main-header');
      const headerContainer = document.getElementById('header-container');
      const menuToggle = document.getElementById('menu-toggle');
      const mobileNav = document.getElementById('mobile-nav');
      
      function updateHeaderOnScroll() {
        if (!header || !headerContainer) return;
        
        if (window.scrollY > 50) {
          // Scrolled state
          header.classList.add('bg-white/85', 'backdrop-blur-md', 'shadow-md');
          header.classList.remove('bg-transparent');
          headerContainer.classList.remove('py-6');
          headerContainer.classList.add('py-3');
        } else {
          // Top state
          header.classList.remove('bg-white/85', 'backdrop-blur-md', 'shadow-md');
          header.classList.add('bg-transparent');
          headerContainer.classList.add('py-6');
          headerContainer.classList.remove('py-3');
        }
      }
      
      // Toggle mobile menu
      if (menuToggle && mobileNav) {
        menuToggle.addEventListener('click', () => {
          // Toggle menu visibility
          if (mobileNav.classList.contains('hidden')) {
            mobileNav.classList.remove('hidden');
            mobileNav.classList.add('animate-slide-in');
            
            // Change hamburger to X
            menuToggle.innerHTML = `
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            `;
          } else {
            mobileNav.classList.add('hidden');
            mobileNav.classList.remove('animate-slide-in');
            
            // Change X back to hamburger
            menuToggle.innerHTML = `
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            `;
          }
        });
        
        // Close menu when clicking on navigation items
        const navLinks = mobileNav.querySelectorAll('a');
        navLinks.forEach(link => {
          link.addEventListener('click', () => {
            if (window.innerWidth < 768) { // Only on mobile
              mobileNav.classList.add('hidden');
              menuToggle.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
              `;
            }
          });
        });
      }
      
      // Initial state
      updateHeaderOnScroll();
      
      // Add scroll event listener
      window.addEventListener('scroll', updateHeaderOnScroll);
      
      // Handle window resize (to handle mobile to desktop transitions)
      window.addEventListener('resize', () => {
        if (mobileNav && window.innerWidth >= 768) {
          mobileNav.classList.remove('hidden');
        } else if (mobileNav && window.innerWidth < 768) {
          mobileNav.classList.add('hidden');
          if (menuToggle) {
            menuToggle.innerHTML = `
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            `;
          }
        }
      });
    </script>
  </body>
</html>
